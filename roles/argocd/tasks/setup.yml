---
- name: Instalar pacotes necessários
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Adicionar a chave GPG oficial do Docker
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

- name: Adicionar repositório do Docker
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release | lower }} stable"
    state: present

- name: Atualizar lista de pacotes
  apt:
    update_cache: yes

- name: Instalar Docker
  apt:
    name: docker-ce
    state: present
    update_cache: yes

- name: Iniciar e habilitar o Docker
  systemd:
    name: docker
    state: started
    enabled: yes


- name: Install k3d
  shell: |
    curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
  args:
    creates: /usr/local/bin/k3d

- name: copy k8s.mod.conf
  copy:
    src: k8s.mod.conf
    dest: /etc/modules-load.d/k8s.mod.conf
    owner: root
    group: root
    mode: '0644'

- name: copy k8s.sysctl.conf
  copy:
    src: k8s.sysctl.conf
    dest: /etc/sysctl.d/k8s.sysctl.conf
    owner: root
    group: root
    mode: '0644'

- name: ensure sysctl and module is running
  shell: sysctl --system && modprobe br_netfilter
  register: init_kubernetes
  changed_when: "init_kubernetes.rc != 0"

- name: setup keyrings
  ansible.builtin.shell:
    cmd: mkdir -p /etc/apt/keyrings/

- name: reset keyrings
  ansible.builtin.shell:
    cmd: rm -rf /etc/apt/keyrings/

- name: create keyrings directory
  ansible.builtin.shell:
    cmd: mkdir -p /etc/apt/keyrings/

- name: add apt-key
  ansible.builtin.shell:
    cmd: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: add kubernetes list
  ansible.builtin.shell:
    cmd: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

- name: apt - update sources list
  apt:
    update_cache: yes

- name: apt - install packages
  apt:
    name: "{{ kubernetes_packages }}"
    state: present

- name: apt - hold kubeadm
  shell: "apt-mark hold kubelet kubeadm kubectl"

- name: Create Kubernetes cluster using k3d
  shell: |
    k3d cluster delete k3d-cluster-1
    k3d cluster create k3d-cluster-1 --agents 2  --api-port 10.1.0.11:6443
  args:
    creates: /root/.k3d/k3d-cluster-1.yaml

- name: Verify cluster creation
  command: kubectl get nodes
  register: cluster_check
  failed_when: false

- name: Display Kubernetes Cluster Nodes
  debug:
    msg: "{{ cluster_check.stdout }}"

- name: Copy kubeconfig for local machine
  fetch:
    src: "/root/.kube/config"
    dest: "./kubeconfig/"
    flat: yes 
